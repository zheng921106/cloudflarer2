      - name: Prepare rclone config
        run: |
          mkdir -p ~/.config/rclone
          # 注意：这里用的是 <<EOF（无引号），这样 ${...} 会被正确展开！
          cat > ~/.config/rclone/rclone.conf <<EOF
          [r2src]
          type = s3
          provider = Cloudflare
          access_key_id = ${R2PUSH_ACCESS_KEY}
          secret_access_key = ${R2PUSH_SECRET_KEY}
          endpoint = ${R2PUSH_ENDPOINT}
          force_path_style = true
          acl = private

          [r2dst]
          type = s3
          provider = Cloudflare
          access_key_id = ${R2DST_ACCESS_KEY}
          secret_access_key = ${R2DST_SECRET_KEY}
          endpoint = ${R2DST_ENDPOINT}
          force_path_style = true
          acl = private
          EOF

          # 额外做一次空值校验，避免后续踩坑
          for v in R2PUSH_ACCESS_KEY R2PUSH_SECRET_KEY R2PUSH_ENDPOINT R2DST_ACCESS_KEY R2DST_SECRET_KEY R2DST_ENDPOINT; do
            if [ -z "${!v}" ]; then
              echo "❌ 缺少必填 Secret: $v" >&2
              exit 11
            fi
          done

          # 端点必须以 https:// 开头
          case "${R2PUSH_ENDPOINT}" in https://*) ;; *) echo "❌ R2PUSH_ENDPOINT 必须以 https:// 开头"; exit 12;; esac
          case "${R2DST_ENDPOINT}"  in https://*) ;; *) echo "❌ R2DST_ENDPOINT 必须以 https:// 开头";  exit 13;; esac
        env:
          R2PUSH_ACCESS_KEY: ${{ secrets.R2PUSH_ACCESS_KEY }}
          R2PUSH_SECRET_KEY: ${{ secrets.R2PUSH_SECRET_KEY }}
          R2PUSH_ENDPOINT: ${{ secrets.R2PUSH_ENDPOINT }}
          R2DST_ACCESS_KEY: ${{ secrets.R2DST_ACCESS_KEY }}
          R2DST_SECRET_KEY: ${{ secrets.R2DST_SECRET_KEY }}
          R2DST_ENDPOINT: ${{ secrets.R2DST_ENDPOINT }}

      # ✅ 不再用 ListBuckets（rclone lsd r2dst:），而是直接按桶列根目录，避免权限/兼容性问题
      - name: Preflight A — 源/目标桶可读性检查（按桶列目录）
        run: |
          set -e
          echo "== Check source bucket exists and readable =="
          # 如果桶不存在或无权限，会在这里失败
          rclone ls r2src:"${SRC_BUCKET}" --max-depth 0 >/dev/null || (echo "❌ 源桶不可访问：${SRC_BUCKET}" >&2; exit 21)
          echo "== Check destination bucket exists and readable =="
          rclone ls r2dst:"${DST_BUCKET}" --max-depth 0 >/dev/null || (echo "❌ 目标桶不可访问：${DST_BUCKET}" >&2; echo "请确认：桶已创建/Endpoint 正确/Token 对该桶有权限"; exit 22)
          echo "✅ 两个桶都可读"

      - name: Preflight B — 目标桶写权限探测
        run: |
          set -e
          echo "test" > /tmp/.r2_write_probe.txt
          if ! rclone copyto /tmp/.r2_write_probe.txt r2dst:"${DST_BUCKET}"/.r2_write_probe.txt; then
            echo "❌ 无法写入 ${DST_BUCKET}，请检查 R2DST_* Token 权限（至少 PutObject；若用 sync 还需 DeleteObject）" >&2
            exit 23
          fi
          rclone deletefile r2dst:"${DST_BUCKET}"/.r2_write_probe.txt || true
          echo "✅ 写权限正常"
