name: R2 Migrate (sharded, rclone)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "选择分片方式：glob 或 prefix"
        required: true
        default: "glob"
        type: choice
        options:
          - glob
          - prefix
  # 如需定时，取消注释（UTC）
  # schedule:
  #   - cron: "0 * * * *"   # 每整点

env:
  # 桶名
  SRC_BUCKET: yasyadong001
  DST_BUCKET: yas003

  # 速率/并发/稳定性（保守默认，先稳再加）
  MIN_AGE: "60s"              # 只搬 ≥60s 的稳定文件
  TRANSFERS: "4"              # 小文件吞吐更好
  CHECKERS: "8"
  UPLOAD_CONC: "4"
  BW_LIMIT: "0"               # 不限带宽；如需限速设 10M 等
  TPS_LIMIT: "12"             # 如遇 429 降低
  CHUNK_SIZE: "32M"
  COPY_CUTOFF: "256M"
  MAX_RETRIES: "8"
  LOW_LEVEL_RETRIES: "20"

jobs:
  # -------------------------------------------
  # 方式 A：GLOB 分片（推荐）
  # -------------------------------------------
  migrate-glob:
    if: ${{ github.event.inputs.mode == 'glob' || github.event.inputs.mode == '' }}
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      fail-fast: false
      matrix:
        shard:
          - "0/**"
          - "1/**"
          - "2/**"
          - "3/**"
          - "4/**"
          - "5/**"
          - "6/**"
          - "7/**"
          - "8/**"
          - "9/**"
          - "a/**"
          - "b/**"
          - "c/**"
          - "d/**"
          - "e/**"
          - "f/**"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash
          rclone version

      - name: Configure rclone remotes (R2 → R2)
        env:
          # 源 R2（push）
          R2PUSH_ACCESS_KEY:  ${{ secrets.R2PUSH_ACCESS_KEY }}
          R2PUSH_SECRET_KEY:  ${{ secrets.R2PUSH_SECRET_KEY }}
          R2PUSH_ENDPOINT:    ${{ secrets.R2PUSH_ENDPOINT }}
          # 目的 R2（dst）
          R2DST_ACCESS_KEY:   ${{ secrets.R2DST_ACCESS_KEY }}
          R2DST_SECRET_KEY:   ${{ secrets.R2DST_SECRET_KEY }}
          R2DST_ENDPOINT:     ${{ secrets.R2DST_ENDPOINT }}
        run: |
          set -euo pipefail
          rclone config create r2push s3 \
            provider=Other env_auth=false \
            access_key_id="${R2PUSH_ACCESS_KEY}" secret_access_key="${R2PUSH_SECRET_KEY}" \
            region=auto endpoint="${R2PUSH_ENDPOINT}" \
            s3-chunk-size="${CHUNK_SIZE}" s3-upload-concurrency="${UPLOAD_CONC}"

          rclone config create r2dst s3 \
            provider=Other env_auth=false \
            access_key_id="${R2DST_ACCESS_KEY}" secret_access_key="${R2DST_SECRET_KEY}" \
            region=auto endpoint="${R2DST_ENDPOINT}" \
            s3-chunk-size="${CHUNK_SIZE}" s3-upload-concurrency="${UPLOAD_CONC}"

          rclone listremotes

      - name: Copy (glob shard)
        run: |
          set -euo pipefail
          mkdir -p logs
          LOG_FILE="logs/r2_copy_glob_$(date -u +%F_%H-%M-%S)_${{ matrix.shard//\//_ }}.log"

          echo "[$(date -u '+%F %T')] Copy with include glob: ${{ matrix.shard }}" | tee -a "$LOG_FILE"

          rclone copy "r2push:${SRC_BUCKET}" "r2dst:${DST_BUCKET}" \
            --fast-list --metadata --size-only \
            --min-age "${MIN_AGE}" \
            --include "${{ matrix.shard }}" --exclude="**" \
            --transfers "${TRANSFERS}" --checkers "${CHECKERS}" \
            --bwlimit "${BW_LIMIT}" --tpslimit "${TPS_LIMIT}" \
            --s3-chunk-size "${CHUNK_SIZE}" --s3-copy-cutoff "${COPY_CUTOFF}" \
            --retries "${MAX_RETRIES}" --low-level-retries "${LOW_LEVEL_RETRIES}" \
            --progress 2>&1 | tee -a "$LOG_FILE"

          echo "[$(date -u '+%F %T')] Shard done." | tee -a "$LOG_FILE"

      - name: Optional verify (size-only)
        if: always()
        run: |
          set -euo pipefail
          mkdir -p logs
          LOG_FILE="logs/r2_check_glob_$(date -u +%F_%H-%M-%S)_${{ matrix.shard//\//_ }}.log"
          rclone check "r2push:${SRC_BUCKET}" "r2dst:${DST_BUCKET}" \
            --one-way --size-only --checkers $((CHECKERS*2)) \
            --include "${{ matrix.shard }}" --exclude="**" \
            --progress 2>&1 | tee -a "$LOG_FILE" || true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: r2-migrate-logs-glob-${{ matrix.shard }}
          path: logs/
          retention-days: 7
